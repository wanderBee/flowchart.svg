{"version":3,"file":"FlowchartSvg.js","sources":["../src/snap.ts","../src/core.ts"],"sourcesContent":["import Snap = require('snapsvg');\r\n\r\n/**\r\n * 扩展 Snap.svg\r\n */\r\n\r\n/**\r\n * 十六进制转RGB\r\n */\r\nString.prototype.hex2rgb = function() {\r\n  //十六进制颜色值的正则表达式\r\n  const reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;\r\n\r\n  var sColor = this.toLowerCase();\r\n  if (sColor && reg.test(sColor)) {\r\n    if (sColor.length === 4) {\r\n      var sColorNew = '#';\r\n      for (var i = 1; i < 4; i += 1) {\r\n        sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1));\r\n      }\r\n      sColor = sColorNew;\r\n    }\r\n    //处理六位的颜色值\r\n    var sColorChange = [];\r\n    for (var i = 1; i < 7; i += 2) {\r\n      sColorChange.push(parseInt('0x' + sColor.slice(i, i + 2)));\r\n    }\r\n    return sColorChange; //\"RGB(\" + sColorChange.join(\",\") + \")\";\r\n  } else {\r\n    return sColor;\r\n  }\r\n};\r\n\r\n/**\r\n * 增加原型方法\r\n *\r\n *   Paper.prototype.linkCircle：连接2个圆\r\n *   Paper.prototype.circlesByPath : 根据path路径生成多个圆\r\n */\r\nSnap.plugin(function(Snap, Element, Paper) {\r\n  const proto = Paper.prototype;\r\n  const snapPath = Snap.path;\r\n\r\n  /**\r\n      按照给定的path生成circle\r\n      @param {string} path svg路径 \"M10 10L90 90\" eg.\r\n      @param {number} parts 数量\r\n      @param {number} r 半径\r\n    */\r\n  proto.circlesByCircle = function(parts, r, show) {\r\n    // 获取Paper的中心位置开始画圆\r\n    const paperWidth = this.node.width.baseVal.value;\r\n    const paperHeight = this.node.height.baseVal.value;\r\n    let outerCircleR = Math.max((r * 15 + 20 * parts) / Math.PI, 120);\r\n    outerCircleR = Math.min(\r\n      outerCircleR,\r\n      Math.min(paperWidth / 2, paperHeight / 2) - r - 80,\r\n    );\r\n    const outerCirclePath = `M${paperWidth / 2} ${paperHeight /\r\n      2} m${-outerCircleR} 0 a ${outerCircleR} ${outerCircleR} 0 1 0 ${outerCircleR *\r\n      2} 0 a ${outerCircleR} ${outerCircleR} 0 1 0 ${-outerCircleR * 2} 0`;\r\n    if (show) {\r\n      this.path(outerCirclePath).attr({\r\n        fill: 'transparent',\r\n        stroke: '#f21855',\r\n      });\r\n    }\r\n    const g = this.circlesByPath(outerCirclePath, parts, r);\r\n    g.center = {\r\n      x: parseFloat((paperWidth / 2).toString()),\r\n      y: parseFloat((paperWidth / 2).toString()),\r\n    };\r\n    return g;\r\n  };\r\n  /**\r\n      按照给定的path生成circle\r\n      @param {string} path 'circle'|路径path\r\n      @param {number} parts 数量\r\n      @param {number} r 半径\r\n    */\r\n  proto.DEFAULT_COLORS = ['#FF0000', '#FF8800', '#00AA00', '#0000AA'];\r\n  proto.circlesByPath = function(path, parts, r) {\r\n    if (path === 'circle') {\r\n      return this.circlesByCircle(parts, r);\r\n    }\r\n    // 获取路径总的长度（单位：像素）\r\n    const totalLength = snapPath.getTotalLength(path);\r\n    // 获取每一等分的长度（起始于路径的长度）\r\n    const lengthPerPart = totalLength / parts;\r\n    // 根据路径获取指定长度所在的点坐标集合\r\n    const points = [];\r\n    const defaultColors = [];\r\n    let curLength = 0;\r\n    let g = [];\r\n    let i = 0;\r\n    for (; i < parts; i++) {\r\n      curLength = Math.min(lengthPerPart * (i + 1), totalLength);\r\n      const curPoint = snapPath.getPointAtLength(path, curLength);\r\n      points.push({ x: curPoint.x, y: curPoint.y });\r\n      const curColor = this.DEFAULT_COLORS[i] || '#999';\r\n      const curRGBColor = curColor.hex2rgb();\r\n      const curCircle = this.circle(curPoint.x, curPoint.y, r).attr({\r\n        fill: `rgba(${curRGBColor[0]},${curRGBColor[1]},${curRGBColor[2]}, .3)`,\r\n        stroke: curColor,\r\n        strokeWidth: 2,\r\n      });\r\n\r\n      curCircle.color = curColor;\r\n      g.push(curCircle);\r\n    }\r\n    return g;\r\n  };\r\n\r\n  /**\r\n      连接2个圆，生成箭头指向线\r\n      @param {Element} sCircle 连接线起始圆\r\n      @param {Element} tCircle 连接线指向的终点圆\r\n      @param {string} lineColor 连接线的颜色， 默认 '#CCC'\r\n    */\r\n  proto.linkCircle = function(sCircle, tCircle, lineColor) {\r\n    lineColor = lineColor || '#CCC';\r\n    if (sCircle.type !== 'circle' || tCircle.type !== 'circle') {\r\n      return;\r\n    }\r\n    // sourceCircle.pointTo(targetCircle);\r\n    const sCircleBBox = sCircle.getBBox();\r\n    const tCircleBBox = tCircle.getBBox();\r\n    const tLinePath = `M${sCircleBBox.cx} ${sCircleBBox.cy} L${\r\n      tCircleBBox.cx\r\n    } ${tCircleBBox.cy}`;\r\n\r\n    const totalLengthOfTLine = snapPath.getTotalLength(tLinePath);\r\n    const retLinePath = snapPath.getSubpath(\r\n      tLinePath,\r\n      sCircleBBox.r1,\r\n      totalLengthOfTLine - tCircleBBox.r1,\r\n    );\r\n    const retLine = this.path(retLinePath).toDefs();\r\n    const totalLengthOfRLine = snapPath.getTotalLength(retLine);\r\n    const startPoint = snapPath.getPointAtLength(retLinePath, 0);\r\n    const endPoint = snapPath.getPointAtLength(retLinePath, totalLengthOfRLine);\r\n\r\n    let linkSvg = this.link(\r\n      {\r\n        x: startPoint.x,\r\n        y: startPoint.y,\r\n      },\r\n      {\r\n        x: endPoint.x,\r\n        y: endPoint.y,\r\n      },\r\n      lineColor,\r\n    );\r\n    this.links = this.links || [];\r\n    this.links.push({\r\n      source: sCircle,\r\n      line: linkSvg,\r\n      target: tCircle,\r\n    });\r\n\r\n    // 删除暂存的图形\r\n    retLine.remove();\r\n\r\n    // const g = this.g();\r\n    // g.add(sCircle, linkSvg, tCircle);\r\n    return linkSvg;\r\n  };\r\n\r\n  /**\r\n      连接2个节点，生成箭头指向线\r\n      @param {object} source 源节点\r\n        { x: 1, y: 1}\r\n      @param {object} target 目标节点\r\n        { x: 50, y: 50}\r\n      @return {SnapElement} 连接线\r\n    */\r\n  proto.link = function(source, target, color) {\r\n    // 三角形marker\r\n    const triagleSize = 5;\r\n    const trl = createTtriagleMarker.call(this, color);\r\n\r\n    const linkLine = this.line(source.x, source.y, target.x, target.y);\r\n    linkLine.attr({\r\n      stroke: color,\r\n      strokeWidth: 2,\r\n      markerEnd: trl,\r\n    });\r\n\r\n    return linkLine;\r\n\r\n    function createTtriagleMarker(color) {\r\n      var p1 = this.path(\r\n        `M2,2 L3,${triagleSize / 2 + 2} L2,${2 + triagleSize}  L${2 +\r\n          triagleSize},${triagleSize / 2 + 2} L2,2 Z`,\r\n      ).attr({\r\n        fill: color,\r\n        stroke: color,\r\n        strokeWidth: 1,\r\n        opacity: 0.6,\r\n      });\r\n      return p1.marker(\r\n        0,\r\n        0,\r\n        2 * triagleSize,\r\n        2 * triagleSize,\r\n        2 + triagleSize,\r\n        triagleSize / 2 + 2,\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n      标记一个Element元素（说明信息）\r\n      @param {Element} elem 需要标记的对象\r\n      @param {string} labelText 标记内容\r\n      @param {string} align 位置（left|right）\r\n    */\r\n  proto.label = function(elem, labelText, align = 'right') {\r\n    const bbox = elem.getBBox();\r\n    const fenceWidth = 10; // 三角图标和矩形框之间的竖条宽度\r\n    // 计算字符的像素长度\r\n    const tempText = this.text(-1000, -1000, labelText);\r\n    const tempTextBBox = tempText.getBBox();\r\n    const DEFAULTS = {\r\n      rectWidth: Math.max(tempTextBBox.width + 16 * 2, 80), // padding: 8px\r\n      rectHeight: 30,\r\n      fenceWidth: 5,\r\n      textAlign: 'center',\r\n    };\r\n\r\n    const rectStartPoint = {\r\n      x: bbox.x + bbox.width + 30,\r\n      y: bbox.y + (bbox.height - DEFAULTS.rectHeight) / 2,\r\n    };\r\n    const bigRect = this.rect(\r\n      rectStartPoint.x,\r\n      rectStartPoint.y,\r\n      DEFAULTS.rectWidth,\r\n      DEFAULTS.rectHeight,\r\n    ).attr({\r\n      fill: '#fff',\r\n      stroke: '#ddd',\r\n      strokeWidth: 1,\r\n    });\r\n    const fenceRect = this.rect(\r\n      rectStartPoint.x - DEFAULTS.fenceWidth,\r\n      rectStartPoint.y + 0.5,\r\n      DEFAULTS.fenceWidth,\r\n      DEFAULTS.rectHeight - 1,\r\n    ).attr({\r\n      fill: elem.color || '#dedede',\r\n      stroke: elem.color || '#dedede',\r\n      strokeWidth: 2,\r\n    });\r\n    const ptCenter = {\r\n      x: rectStartPoint.x - DEFAULTS.fenceWidth,\r\n      y: rectStartPoint.y + DEFAULTS.rectHeight / 2,\r\n      size: 6,\r\n    };\r\n    const pTriagle = this.path(\r\n      `M${ptCenter.x},${ptCenter.y - ptCenter.size} L${ptCenter.x -\r\n        ptCenter.size * 2 +\r\n        2},${ptCenter.y} L${ptCenter.x},${ptCenter.y + ptCenter.size} Z`,\r\n    ).attr({\r\n      fill: elem.color || '#dedede',\r\n    });\r\n    var textSvg;\r\n    if (DEFAULTS.textAlign == 'left') {\r\n      textSvg = this.text(\r\n        rectStartPoint.x + 8,\r\n        rectStartPoint.y + bbox.r2 - 1,\r\n        labelText,\r\n      ); // y坐标有1像素的偏移，需要 - 1\r\n    } else {\r\n      textSvg = this.text(\r\n        rectStartPoint.x + DEFAULTS.rectWidth / 2 - tempTextBBox.width / 2,\r\n        rectStartPoint.y + bbox.r2 - 1,\r\n        labelText,\r\n      ); // y坐标有1像素的偏移，需要 - 1\r\n    }\r\n    const textSvgBBox = textSvg.getBBox();\r\n\r\n    const g = this.g();\r\n    g.add(bigRect, fenceRect, pTriagle, textSvg);\r\n    let f = this.filter(Snap.filter.shadow(1, 2, 2, '#999', 0.3));\r\n    g.attr({\r\n      filter: f,\r\n    });\r\n\r\n    if (align == 'left') {\r\n      // 整个标记框旋转180°到元素左侧\r\n      g.transform(`rotate(180, ${bbox.cx}, ${bbox.cy})`);\r\n      // 自旋转180°，否则字体是上下颠倒的\r\n      textSvg.transform(\r\n        `rotate(180, ${textSvgBBox.cx}, ${textSvgBBox.cy + 0.5})`,\r\n      ); // g旋转后textSVG的y坐标有.5像素的偏移，需要 + .5\r\n      //  g旋转后阴影方向要改变\r\n      f = this.filter(Snap.filter.shadow(1, -2, 2, '#777', 0.3));\r\n      g.attr({\r\n        filter: f,\r\n      });\r\n    }\r\n  };\r\n});\r\n\r\nexport class Snapsvg {\r\n  protected snap: any;\r\n\r\n  constructor(selector) {\r\n    this.snap = Snap(selector);\r\n  }\r\n\r\n  protected _onload(): void {\r\n    if (typeof arguments[0] === 'function') {\r\n      arguments[0].apply(this, [].splice.call(arguments, 1));\r\n    }\r\n  }\r\n\r\n  protected _render(): void {}\r\n}\r\n","import { Snapsvg } from './snap';\r\n\r\nconst DEFAULTS = {\r\n  type: 'polar',\r\n  r: 22,\r\n  data: [],\r\n};\r\nexport class FlowSvg extends Snapsvg {\r\n  root: any;\r\n  type: string;\r\n  r: number;\r\n\r\n  constructor(selector) {\r\n    super(selector);\r\n    this.root = this.snap.node;\r\n    return this;\r\n    // throw new Error('FlowSvg has no constructor.');\r\n  }\r\n\r\n  protected _onload(): void {\r\n    if (typeof arguments[0] === 'function') {\r\n      arguments[0].apply(this, [].splice.call(arguments, 1));\r\n    }\r\n  }\r\n\r\n  protected _render(): void {}\r\n\r\n  /**\r\n   * 根据selector初始化FlowSvg对象\r\n   * 不存在符合选择器的svg元素则新建\r\n   * @param selector svg选择器|svgElement\r\n   */\r\n  static init(selector) {\r\n    const snapsvg = new FlowSvg(selector);\r\n    console.log('snapsvg', snapsvg.snap);\r\n    return snapsvg;\r\n  }\r\n\r\n  /**\r\n   * 根据参数生成对应的流程图\r\n   * @param options 流程图参数\r\n   */\r\n  setOption(options) {\r\n    let opts = Object.assign(DEFAULTS, options);\r\n    console.log('>>> FlowchartSvg setOption:', this, opts);\r\n    this.type = opts.type;\r\n    this.r = opts.r;\r\n    if (this.type !== 'polar') {\r\n      return;\r\n    }\r\n\r\n    const circleDatas = {};\r\n    const circleKeys = new Set();\r\n    opts.data.forEach(item => {\r\n      if (!circleKeys.has(item.source)) {\r\n        circleDatas[item.source] = {\r\n          linkFrom: null,\r\n          linkTo: item.target,\r\n        };\r\n        circleKeys.add(item.source);\r\n      } else {\r\n        circleDatas[item.source].linkTo = item.target;\r\n      }\r\n      if (!circleKeys.has(item.target)) {\r\n        circleDatas[item.target] = {\r\n          linkFrom: item.source,\r\n          linkTo: null,\r\n        };\r\n        circleKeys.add(item.target);\r\n      } else {\r\n        circleDatas[item.target].linkFrom = item.source;\r\n      }\r\n    });\r\n    const g = this.snap.circlesByPath('circle', circleKeys.size, this.r);\r\n\r\n    // 互相指向\r\n\r\n    for (var i = 0; i < g.length; i++) {\r\n      let circle01 = g[0];\r\n      let circle02 = g[1];\r\n      let circle03 = g[2];\r\n\r\n      const link01 = this.snap.linkCircle(circle01, circle02, circle01.color);\r\n      const link01b = this.snap.linkCircle(circle02, circle03, circle02.color);\r\n      const link02 = this.snap.linkCircle(circle03, circle01, circle03.color);\r\n    }\r\n\r\n    let index = 0;\r\n    circleKeys.forEach(key => {\r\n      this.snap.label(g[index], key, index++ == 2 ? 'left' : '');\r\n    });\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}